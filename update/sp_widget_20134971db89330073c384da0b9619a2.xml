<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[function($scope,$rootScope,spUtil,spModal) {
	/* widget controller */
	var c = this;
	/*
		$rootScope.$on('selectNote2', function(event,data) { 
		console.log('Listener caught NoteID-2: ' + data.sys_id); 
	});
	*/




	//CRUD-OPERATIONS
	//----------------------------------------------------------
	// CREATE
	//----------------------------------------------------------








	$rootScope.$on('selectNote', function(event,data) { 
		//console.log('Listener caught NoteID: ' + $rootScope.noteID); 
		//-----------------------------------------------------------
		// READ
		//-----------------------------------------------------------
		c.server.get({
			action: 'getNote',
			noteID: $rootScope.noteID
		}).then(function(r) {
			c.data.title = r.data.note.title;
			c.data.note = r.data.note.note;
			c.data.noteID = r.data.note.sys_id;
		});

	});



	//-----------------------------------------------------------
	// UPDATE
	//-----------------------------------------------------------
	c.updateNote = function(updateType) {
		c.server.get({
			action: 'updateNote',
			noteID: c.data.noteID,
			noteBody: c.data.note,
			noteTitle: c.data.title
		}).then(function(r) {
			//Notify the user of the outcome of the action

		});
	}



	//-----------------------------------------------------------
	// DLETE
	//-----------------------------------------------------------
	c.deleteNote = function() {
		c.server.get({
			action: 'deleteNote',
			noteID: c.data.noteID
		}).then(function(r) {
			spUtil.addTrivialMessage("The " + c.data.title + " record has been deleted.");
			$rootScope.$emit('deleteNote', c.data.noteID);
			c.data.title = '';
			c.data.note = '';
			c.data.noteID = '';
		});
	}

	c.confirmDelete = function(){
		spModal.confirm("Are you sure you want to delete this Note record?").then(function(confirmed){
			if(confirmed){
				c.deleteNote();
			}
		});
	}



}]]></client_script>
        <controller_as>c</controller_as>
        <css/>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>false</has_preview>
        <id>notes_body</id>
        <internal>false</internal>
        <link/>
        <name>Notes Body</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
	/* populate the 'data' object */
	/* e.g., data.table = $sp.getValue('table'); */
	/*
	Question: Recall that only Notes records for the currently logged in user are displayed in the Notes List widget. How is the User value set on the new Notes records?

Answer: There are a few different strategies one could use to set the User value for new Note records including:

Set the value in the widget's Server-side script
Set the value using a before Business Rule for record inserts
Set a default value in the User field's Dictionary Entry
The drawback to using the Server-side widget script is that if users use the CreateNotes > Notes module to create a new record, the User field value must be manually set. The benefit to using this strategy is that the logic exists in the Widget itself and is easy to find.

The drawback to using a before Business Rule is that you have another application file to maintain and you, the developer, have to remember not all of the logic for your application is in the widget scripts.

The drawback to setting a default value in the User field's Dictionary Entry is that you have to remember you did that. You can see the field's default value in the Table record but you have to remember to look there.

The Dictionary Entry default value is how the User field is set in the CreateNotes application you loaded from the GitHub repository for this exercise.
	*/


	if (input && input.noteID) {
		var note = new GlideRecord('x_snc_createnotes_note');

		if (note.get(input.noteID)) {


			//-----------------------------------------------------------
			// READ
			//-----------------------------------------------------------
			if (input.action == 'getNote') {
				data.note = {};
				$sp.getRecordValues(data.note, note, "title, note, sys_id");
			}
			//-----------------------------------------------------------
			// UPDATE
			//-----------------------------------------------------------
			else if (input.action == 'updateNote') { 
				note.title = input.noteTitle; 
				note.note = input.noteBody; 
				var f = note.update(); 
				// Need to update the data object with the new title
				// and first 20 characters of the note (do not want to write huge
				// strings to the Notes List widget)
				//if(f){
				data.title = note.getValue('title');
				data.note = note.getValue('note');//.slice(0,20);
				//}

			}	

			//-----------------------------------------------------------
			// DLETE
			//-----------------------------------------------------------
			else if (input.action == 'deleteNote') { 
				note.deleteRecord(); 
			}
		}
	}

})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2019-04-26 23:12:30</sys_created_on>
        <sys_id>20134971db89330073c384da0b9619a2</sys_id>
        <sys_mod_count>41</sys_mod_count>
        <sys_name>Notes Body</sys_name>
        <sys_package display_value="CreateNotes" source="x_snc_createnotes">df5fd9a5090232007f44e1046c8ff69f</sys_package>
        <sys_policy/>
        <sys_scope display_value="CreateNotes">df5fd9a5090232007f44e1046c8ff69f</sys_scope>
        <sys_update_name>sp_widget_20134971db89330073c384da0b9619a2</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2019-04-27 16:12:20</sys_updated_on>
        <template><![CDATA[<div class="panel panel-default" ng-show="c.data.noteID">
    <div class="panel-heading clearfix">
      <div class="row">
        <div class="col-md-11">
          <input class="form-control" id="note-title" ng-model="c.data.title" ng-change="c.updateNote('title')" ng-model-options="{debounce: 1000}"/>
        </div>
        <!--
        <div class="col-md-1"> 
          <button class="btn btn-danger pull-right" ng-click="c.confirmDelete()"> 
            <span class="glyphicon glyphicon-trash"></span> 
          </button> 
        </div>
-->
        <!-- USE CUSTOM DIRECTIVE -->
        <delete-button-confirm></delete-button-confirm>
      </div>
    </div>
    <div class="panel-body">
      <textarea class="form-control" id="note-body" ng-model="c.data.note" ng-change="c.updateNote('body')" ng-model-options="{debounce: 1000}" ></textarea>
    </div>
  </div>]]></template>
    </sp_widget>
</record_update>
